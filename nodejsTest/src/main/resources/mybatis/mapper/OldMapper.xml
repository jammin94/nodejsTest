<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mvc.forrest.dao.old.OldDAO">
	<!--namespace: 이 mapper.xml과 매핑될 mapper.java(인터페이스)를 의미함 -->


	<resultMap id="oldSelectMap" type="old">
		<!-- result property="필드" column="테이블" -->
		<result property="oldNo" column="oldNo" jdbcType="INTEGER" />
		<result property="userId" column="userId" jdbcType="VARCHAR" />
		<result property="oldPrice" column="oldPrice"
			jdbcType="INTEGER" />
		<result property="oldTitle" column="oldTitle"
			jdbcType="VARCHAR" />
		<result property="oldDetail" column="oldDetail"
			jdbcType="INTEGER" />
		<result property="oldDate" column="oldDate"
			jdbcType="TIMESTAMP" />
		<result property="oldView" column="oldView" jdbcType="INTEGER" />
		<result property="category" column="category"
			jdbcType="VARCHAR" />
		<result property="oldState" column="oldState"
			jdbcType="TINYINT" />
		<result property="oldImg" column="oldImg" jdbcType="VARCHAR" />
		<result property="oldAddr" column="oldAddr" jdbcType="VARCHAR" />
	</resultMap>

	<!-- SQL : INSERT -->
	<insert id="addOld" parameterType="old">
		INSERT
		INTO OLD(oldNo,userId, oldPrice, oldTitle, oldDetail, oldDate,oldView,
		category, oldState, oldImg, oldAddr)
		values
		(NULL,#{userId},#{oldPrice},#{oldTitle},#{oldDetail},CURRENT_TIMESTAMP,#{oldView},#{category},#{oldState},#{oldImg},#{oldAddr})
	</insert>

	<!-- SQL : DELETE -->
	<delete id="deleteOld" parameterType="Int">
		DELETE
		FROM OLD
		WHERE oldNo = #{oldNo}
	</delete>

	<!-- SQL : SELECT ONE -->
	<select id="getOld" parameterType="Int" resultMap="oldSelectMap">
		SELECT old.*, oldReview.userRate
		FROM old
		LEFT OUTER JOIN oldReview
		ON old.oldNo= oldReview.oldNo
		WHERE old.oldNo=#{oldNo}
	</select>

	<!-- SQL : UPDATE -->
	<update id="updateOld" parameterType="old">
		update old
		<set>
			oldPrice = #{oldPrice},
			oldTitle = #{oldTitle},
			oldDetail = #{oldDetail},
			category = #{category},
			oldState = #{oldState},
			oldImg =#{oldImg},
			oldAddr =#{oldAddr},
			oldDate =CURRENT_TIMESTAMP
		</set>
		WHERE oldNo = #{oldNo}
	</update>





	<!-- SQL : SELECT LIST -->
	<select id="getOldList" parameterType="Search"
		resultMap="oldSelectMap">
		SELECT * FROM old
		<where>

			<if test="searchKeyword != null and searchCategory = null">
				oldTitle LIKE CONCAT('%',#{searchKeyword}#,'%')
			</if>

			<if test="searchKeyword =null and searchCategory !=null">
				category LIKE CONCAT('%',#{searchCategory}#,'%')
			</if>

		</where>
		order by oldDate DESC

	</select>

	<!-- <select id="getTotalCount" parameterType="Search" resultType="int"> 
		SELECT * FROM old </select> -->

	<select id="getOldListForIndex" resultMap="oldSelectMap">
		SELECT inner_table.* , inner_table.ROWNO
		FROM(
		SELECT *, ROW_NUMBER() OVER() AS ROWNO
		FROM old
		order by oldDate DESC ) inner_table
		WHERE inner_table.ROWNO &lt;= 4
	</select>




</mapper>